<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 8 部署 Yapi</title>
      <link href="/2a8401d8.html"/>
      <url>/2a8401d8.html</url>
      
        <content type="html"><![CDATA[<h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><ol><li><p>查看可用的模块，<code>d</code> 代表默认的版本：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum module list nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> <img src="https://coderlxc-1256179520.file.myqcloud.com/20210818/BfkYTI.png" alt="image-20210818145614914"></p></li><li><p>安装默认版本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum module install nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置 NPM 淘宝镜像</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm config set registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><ol><li><p>创建 yum 配置文件</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim /etc/yum.repos.d/mongodb-org-4.2.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编辑配置文件填入以下内容：</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[mongodb-org-4.2]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.2.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装 MongoDB</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install -y mongodb-org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>启动 MongoDB 服务</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start mongod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置开机启动</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl enable mongod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看是否配置开机自启成功</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl list-unit-files|grep mongod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="Yapi"><a href="#Yapi" class="headerlink" title="Yapi"></a>Yapi</h2><ol><li><p>安装 Yapi</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -g yapi-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>启动可视化安装服务</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yapi server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>填写相关配置信息后，点击<code>开始部署</code>，等待完成后记住<code>管理员邮箱账号</code>和<code>密码</code></p></li></ol><p><img src="https://coderlxc-1256179520.file.myqcloud.com/20210818/lWVmYf.png" alt="image-20210818150949211"></p><ol start="4"><li><p>切换到 Yapi 的部署位置启动服务，此时可通过 web 来访问 Yapi 服务了</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd /root/my-yapi &amp;&amp; node vendors/server/app.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="PM2-守护进程"><a href="#PM2-守护进程" class="headerlink" title="PM2 守护进程"></a>PM2 守护进程</h2><ol><li><p>安装 PM2</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install -y pm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用 PM2 启动 Yapi，并设置占用内存超过 500M 后重新启动服务：</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pm2 start /root/my-yapi/vendors/server/app.js -n yapi --max-memory-restart 500M<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> yapi </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 部署 Gogs 私有代码仓库</title>
      <link href="/7ffb7ac.html"/>
      <url>/7ffb7ac.html</url>
      
        <content type="html"><![CDATA[<h2 id="设置-Git-用户"><a href="#设置-Git-用户" class="headerlink" title="设置 Git 用户"></a>设置 Git 用户</h2><ol><li>创建 Git 用户</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adduser <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>给 <code>/etc/sudoers</code> 添加写权限</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +w /etc/sudoers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>把 Git 用户加进 <code>sudoers</code>，并设置 sudo 的时候不用输入密码</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span>     <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>       NOPASSWD:ALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="搭建-Gogs"><a href="#搭建-Gogs" class="headerlink" title="搭建 Gogs"></a>搭建 Gogs</h2><ol><li>进入到 Git 用户的家目录并下载 Gogs 的进制包，最新版本的二进制包可以去<a href="https://gogs.io/docs/installation/install_from_binary">官网</a>查看。</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/git <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> https://dl.gogs.io/0.12.3/gogs_0.12.3_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>解压</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> -zxvf gogs_0.12.3_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>进入到刚刚解压好的 gogs 目录，使用 Git 用户临时启动 Gogs 服务</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> gogs <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> -u <span class="token function">git</span> ./gogs web<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>创建一个 Gogs 数据库</li></ol><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> gogs <span class="token keyword">default</span> <span class="token keyword">CHARSET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>创建一个只有本地可以连接的 <code>gogs</code> 用户，密码是 <code>password</code>，<strong>注意将密码修改你自己的</strong>。</li></ol><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">'gogs'</span><span class="token variable">@'127.0.0.1'</span> identified <span class="token keyword">by</span> <span class="token string">'password'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="6"><li>给 <code>gogs</code> 用户分配 <code>gogs</code> 数据库的所有权限</li></ol><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">on</span> gogs<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">'gogs'</span><span class="token variable">@'127.0.0.1'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时候就可以通过服务器的 <code>IP:3000</code> 访问了 Gogs 的 Web 页面了，我用 Nginx 配了反向代理，所以直接访问 <code>IP</code> 即可。</p><p>在 Web 页面上配置好<strong>数据库信息</strong>、<strong>仓库根目录</strong>、<strong>运行系统用户</strong>等信息，点击<code>立即安装</code>即可。</p><p>关于<code>管理员账号设置</code>，可以这个页面中直接设置，也可以安装完成以后再去注册，Gogs 的规则是：<strong>第一个注册的用户</strong>就是管理员。</p><p>如下是我的配置：</p><p><img src="https://coderlxc-1256179520.file.myqcloud.com/20210812/dI4Ob8.png" alt="image-20210812105425086"></p><h2 id="把-Gogs-作为服务运行并配置开机自启动"><a href="#把-Gogs-作为服务运行并配置开机自启动" class="headerlink" title="把 Gogs 作为服务运行并配置开机自启动"></a>把 Gogs 作为服务运行并配置开机自启动</h2><ol><li>把 Gogs 官方提供的 <code>gogs.service</code> 模板复制到 <code>/etc/systemd/system</code> 目录下：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /home/git/gogs/scripts/systemd/gogs.service /etc/systemd/system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>修改 <code>gogs.service</code> 模板，如果你是按照上面的步骤操作的则没有什么需要修改的。</li><li>重新加载 <code>systemd</code>:</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>启动 Gogs 服务</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start gogs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>加入开机自启动</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> gogs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> gogs </tag>
            
            <tag> 代码仓库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homestead 配置 Xdebug 3 调试 Web 页面</title>
      <link href="/f57e8b7a.html"/>
      <url>/f57e8b7a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下内容基于：</p><ul><li>Homestead v13.0.1</li><li>PHP 8.0</li><li>Xdebug v3.0.4</li><li>Chrome 96.0.4664.110</li><li>Chrome Extension: Xdebug Helper 1.6.1</li></ul></blockquote><p>首先进入到 Homestead 里，切换到想要使用的 PHP 版本上，执行 <code>php -v</code> 查看信息。</p><p>如果没有 Xdebug 字样，则需要执行 <code>sudo phpenmod xdebug</code>来开启动 xdebug：</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251242520.png"></p><p>查看对应版本 PHP 的 xdebug 配置文件位置：</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251242639.png"></p><p>编辑这个配置文件，在文件末尾添加以下两行（如果你的 Xdebug 主版本号是 2 的话，这里的配置项会不同），保存退出：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xdebug.client_host<span class="token operator">=</span><span class="token number">192.168</span>.10.1xdebug.mode<span class="token operator">=</span>debug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行 <code>sudo service php8.0-fpm restart</code>重启 FPM。</p><p>在 PHPStorm 里设置里，配置一个远程 CLI 解释器，选择 <code>Vagrant</code>:</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251242273.png"></p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251242446.png"></p><p><code>Vagrant 实例文件夹</code> 选择 Homestead 文件夹所在位置：</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251243072.png"></p><p>前往 Chrome 应用商店下载安装 <a href="https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc">Xdebug helper - Chrome 网上应用店</a>， 打开配置页面，配置 PHPStorm 的 IDE Key，然后开启 Debug 模式：</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251243821.png"></p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251243126.png"></p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251230024.png"></p><p>在代码里下个断点，触发断点后 PHPStorm 里会弹出如下窗口，选择<code>手动选择本文件或项目</code>后点击<code>接受</code>：</p><p><img src="https://raw.githubusercontent.com/lvxianchao/images/main/images/202112251243177.png"></p><p>再次进入 PHPStorm 设置，选择 <code>PHP &gt; 服务器</code> 可以看到刚刚配置的服务器，将<strong>顶层目录</strong>映射正确后即可正常 Debug：</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> homestead </tag>
            
            <tag> xdebug </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
